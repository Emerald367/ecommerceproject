{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "E-Commerce",
        "description": "An API that has all the features an E-Commerce Store would have"
    },
    "paths": {
        "/register": {
            "post": {
                "summary": "Registers a new user and stores user information in a database",
                "parameters": [
                   {
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "description": "User Email"
                            },
                            "shippingAddress": {
                                "type": "string",
                                "description": "User Shipping Address"
                            },
                            "password": {
                                "type": "string",
                                "description": "User Password (Will be hashed when request is sent)"
                            }
                        }
                    }
                   }
                ],
                "responses": {
                    "200": {
                        "description": "Registration Successful"
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Email is already in use"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Allows a user to login. It checks registration by checking if the password they placed to register is the same as the one they're logging in with.",
                "parameters": [
                   {
                      "name": "body",
                      "in": "body",
                      "required": true,
                      "schema": {
                        "type": "object",
                        "properties": {
                            "userID": {
                                "type": "integer",
                                "description": "User ID"
                            },
                            "password": {
                                "type": "string",
                                "description": "password of the registered user"
                            }
                        }
                      }
                   }
                ], 
                "responses": {
                    "200": {
                        "description": "Matching Passwords"
                    },
                    "403": {
                        "description": "Incorrect Password"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users:id": {
            "get": {
                "summary": "Allows a registered user to retrieve their profile information",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "profile": {
                                    "type": "object",
                                    "description": "User profile data"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "User Profile Received"
                                }
                            }
                        }
                    },
                    "404": {
                       "description": "Session not created"
                    }
                }
            }
        },
        "/products": {
            "post": {
                "summary": "Creates a product and stores it in the database",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "productName": {
                                    "type": "string"
                                },
                                "productDesc": {
                                    "type": "string"
                                },
                                "productPrice": {
                                    "type": "number",
                                    "format": "double"
                                }
                            }
                            
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product Created"
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Product already created"
                    }
                }
            }
        },
        "/products:id": {
            "get": {
                "summary": "Getting a specific product based on its ID in the database",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "product": {
                                    "type": "object",
                                    "description": "Specific Product"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Product Found"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Product Found"
                    }
                }
            }
        }
    }
}